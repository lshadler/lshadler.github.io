{"version":3,"sources":["webpack:///./src/components/BlogListItem.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/styles/normalize.ts","webpack:///./src/components/NavBarLinks.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ListItemContainer","Object","styled_base_browser_esm","target","getEmSize","colors","brand","StyledLink","Link","name","styles","BlogListItem","_ref","title","to","core_browser_esm","BlogList","query","Blog","posts","data","allMarkdownRemark","edges","layouts","Page","Container","map","_ref2","_ref2$node","node","fields","frontmatter","components_BlogListItem","slug","__webpack_require__","d","__webpack_exports__","fonts","breakpoints","widths","dimensions","heights","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledPage","normalize","PageLink","NavBarLinks","react","StyledHeader","transparentize","HeaderInner","HomepageLink","Toggle","Navbox","Hamburger","Header","navbarOpen","onClick","setNavbarOpen","open","NavbarLinks","components_NavBarLinks","StyledLayoutRoot","LayoutRoot","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_LayoutMain","_991718019","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-blog-tsx-34c212ad0d0136516b58.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Link } from 'gatsby';\nimport { colors } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\ninterface BlogListItemProps {\n    title: string,\n    to: string\n}\n\nconst ListItemContainer = styled.li`\n    min-height: ${getEmSize(3)}em;\n    border: ${getEmSize(1)}em solid ${colors.brand};\n`;\n\nconst StyledLink = styled(Link)`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    padding: 1em;\n`;\n\nconst BlogListItem: React.FC<BlogListItemProps> = ({\n  title,\n  to,\n}) => (\n  <li>\n\n    <ListItemContainer>\n      <StyledLink to={to}>\n        {title}\n      </StyledLink>\n    </ListItemContainer>\n  </li>\n);\n\nexport default BlogListItem;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from '@emotion/styled';\nimport Page from '../components/Page';\nimport Container from '../components/Container';\nimport IndexLayout from '../layouts';\nimport BlogListItem from '../components/BlogListItem';\n\ninterface PostData {\n  node: {\n    fields: {\n      slug: string\n    },\n    frontmatter: {\n      title: string\n    }\n  }\n}\n\ninterface BlogProps {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<PostData>\n    }\n  }\n}\n\nconst BlogList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Blog = ({ data } : BlogProps) => {\n  const { edges: posts } = data.allMarkdownRemark;\n\n\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>Develop-Mental</h1>\n          <p>\n            Welcome to my blog. Here, I have written about everything from\n            learning algorithms to social movements, to designing video games!\n          </p>\n          <BlogList>\n            {posts.map(({ node: { fields, frontmatter } }:PostData) => (\n              <BlogListItem to={fields.slug} title={frontmatter.title} />\n            ))}\n          </BlogList>\n        </Container>\n      </Page>\n    </IndexLayout>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  query GetMarkdownPage {\n    allMarkdownRemark {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#123632',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc',\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)',\n  },\n  white: '#fff',\n  black: '#000',\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace',\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140,\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18,\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25,\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2,\n  },\n  containerPadding: 1.5,\n};\n\nexport const heights = {\n  header: 60,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n\nexport default {\n  getEmSize,\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({\n  children,\n  className,\n}) => <StyledContainer className={className}>{children}</StyledContainer>;\n\nexport default Container;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { dimensions } from '../styles/variables';\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({\n  children,\n  className,\n}) => <StyledPage className={className}>{children}</StyledPage>;\n\nexport default Page;\n","import {\n  dimensions, fonts, colors, breakpoints,\n} from './variables';\nimport { getEmSize } from './mixins';\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.ui.whisper};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport {\n  colors,\n} from '../styles/variables';\n\nconst PageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.1rem;\n  margin-left: 1.0rem;\n  font-weight: 400;\n\n`;\n\nconst NavBarLinks: React.FC<any> = () => (\n  <>\n    <PageLink to=\"/resume\">Resume</PageLink>\n    <PageLink to=\"/blog\">Blog</PageLink>\n    <PageLink to=\"/band\">Band</PageLink>\n  </>\n);\n\nexport default NavBarLinks;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\nimport { Link } from 'gatsby';\nimport NavBarLinks from './NavBarLinks';\nimport {\n  heights, dimensions, colors,\n} from '../styles/variables';\nimport Container from './Container';\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.2rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\nconst Toggle = styled.div``;\nconst Navbox = styled.div``;\nconst Hamburger = styled.div``;\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n      <Toggle\n        navbarOpen={navbarOpen}\n        onClick={() => setNavbarOpen(!navbarOpen)}\n      >\n        {navbarOpen ? <Hamburger open /> : <Hamburger />}\n      </Toggle>\n      {navbarOpen ? (\n        <Navbox>\n          <NavbarLinks />\n        </Navbox>\n      ) : (\n        <Navbox open>\n          <NavBarLinks />\n        </Navbox>\n      )}\n    </HeaderInner>\n  </StyledHeader>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport normalize from '../styles/normalize';\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n);\n\nexport default LayoutRoot;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport 'modern-normalize';\nimport '../styles/normalize';\n\nimport Header from '../components/Header';\nimport LayoutRoot from '../components/LayoutRoot';\nimport LayoutMain from '../components/LayoutMain';\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords },\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n);\n\nexport default IndexLayout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}