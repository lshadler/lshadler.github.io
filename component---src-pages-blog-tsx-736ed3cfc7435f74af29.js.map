{"version":3,"sources":["webpack:///./src/components/BlogListItem.tsx","webpack:///./src/pages/blog.tsx","webpack:///./src/styles/variables.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styles/mixins.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/styles/normalize.ts","webpack:///./src/components/NavBarLinks.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ListItemContainer","Object","styled_base_browser_esm","target","getEmSize","colors","brand","StyledLink","Link","breakpoints","md","StyledTitle","StyledDate","gray","calm","BlogListItem","_ref","data","_data$frontmatter","frontmatter","title","date","slug","fields","dateObj","Date","core_browser_esm","to","toLocaleDateString","BlogList","name","styles","query","Blog","posts","allMarkdownRemark","edges","layouts","Page","Container","map","_ref2","node","components_BlogListItem","__webpack_require__","d","__webpack_exports__","fonts","widths","dimensions","heights","lilac","accent","success","warning","ui","bright","light","whisper","code","dark","copy","white","black","sansSerif","serif","monospace","xs","sm","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","_variables__WEBPACK_IMPORTED_MODULE_0__","size","m","module","exports","require","default","StyledContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","StyledPage","normalize","NavItem","NavBarLinks","react","StyledHeader","transparentize","HeaderInner","HomepageLink","Toggle","Navbox","open","Hamburger","Header","_React$useState","navbarOpen","setNavbarOpen","onClick","components_NavBarLinks","StyledLayoutRoot","LayoutRoot","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_LayoutMain","_991718019","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-blog-tsx-736ed3cfc7435f74af29.js","sourcesContent":["import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { Link } from 'gatsby';\nimport { colors, breakpoints } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\nimport { BlogPostData } from '../types.ts/index';\n\ninterface BlogListItemProps {\n    data: BlogPostData\n}\n\nconst ListItemContainer = styled.li`\n    min-height: ${getEmSize(3)}em;\n    border: ${getEmSize(1)}em solid ${colors.brand};\n    margin: 1em;\n\n`;\n\nconst StyledLink = styled(Link)`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n    padding: 1em;\n\n    @media (max-width: ${breakpoints.md}px) {\n      flex-direction: column-reverse;\n    }\n`;\n\nconst StyledTitle = styled.div``;\n\nconst StyledDate = styled.div`\n  color: ${colors.gray.calm};\n  align-self\n`;\n\nconst BlogListItem: React.FC<BlogListItemProps> = ({\n  data,\n}) => {\n  const { frontmatter: { title, date }, fields: { slug } } = data;\n  const dateObj: Date = new Date(date);\n\n  return (\n    <li>\n\n      <ListItemContainer>\n        <StyledLink to={slug}>\n          <StyledTitle>{title}</StyledTitle>\n          <StyledDate>{dateObj.toLocaleDateString()}</StyledDate>\n        </StyledLink>\n      </ListItemContainer>\n    </li>\n  );\n};\n\nexport default BlogListItem;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from '@emotion/styled';\nimport Page from '../components/Page';\nimport Container from '../components/Container';\nimport IndexLayout from '../layouts';\nimport BlogListItem from '../components/BlogListItem';\nimport { BlogPostData } from '../types.ts/index';\n\ninterface BlogPostNode {\n  node: BlogPostData\n}\n\ninterface BlogProps {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<BlogPostNode>\n    }\n  }\n}\n\nconst BlogList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst Blog = ({ data } : BlogProps) => {\n  const { edges: posts } = data.allMarkdownRemark;\n\n\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>Develop-Mental</h1>\n          <p>\n            Welcome to my blog. Here, I have written about everything from\n            learning algorithms to social movements, to designing video games!\n          </p>\n          <BlogList>\n            {posts.map(({ node }: BlogPostNode) => (\n              <BlogListItem data={node} />\n            ))}\n          </BlogList>\n        </Container>\n      </Page>\n    </IndexLayout>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  query GetMarkdownPage {\n    allMarkdownRemark {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#123632',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc',\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)',\n  },\n  white: '#fff',\n  black: '#000',\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace',\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140,\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18,\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25,\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2,\n  },\n  containerPadding: 1.5,\n};\n\nexport const heights = {\n  header: 60,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n\nexport default {\n  getEmSize,\n};\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({\n  children,\n  className,\n}) => <StyledContainer className={className}>{children}</StyledContainer>;\n\nexport default Container;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { dimensions } from '../styles/variables';\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({\n  children,\n  className,\n}) => <StyledPage className={className}>{children}</StyledPage>;\n\nexport default Page;\n","import {\n  dimensions, fonts, colors, breakpoints,\n} from './variables';\nimport { getEmSize } from './mixins';\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.ui.whisper};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { Link } from 'gatsby';\n\nimport {\n  colors, breakpoints,\n} from '../styles/variables';\n\nconst NavItem = styled(Link)`\n  text-decoration: none;\n  color: ${colors.white};\n  display: inline-block;\n  white-space: nowrap;\n  margin: 0 1vw;\n  transition: all 200ms ease-in;\n  position: relative;\n\n  :after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    width: 0%;\n    content: \".\";\n    color: transparent;\n    background: goldenrod;\n    height: 1px;\n    transition: all 0.4s ease-in;\n  }\n\n  :hover {\n    color: goldenrod;\n    ::after {\n      width: 100%;\n    }\n  }\n\n  @media (max-width: ${breakpoints.md}px) {\n    padding: 20px 0;\n    font-size: 1.5rem;\n    z-index: 6;\n    color: ${colors.brand}\n  }\n`;\n\nconst NavBarLinks: React.FC<any> = () => (\n  <>\n    <NavItem to=\"/resume\">Resume</NavItem>\n    <NavItem to=\"/blog\">Blog</NavItem>\n    <NavItem to=\"/band\">Band</NavItem>\n  </>\n);\n\nexport default NavBarLinks;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\nimport { Link } from 'gatsby';\nimport NavBarLinks from './NavBarLinks';\nimport {\n  heights, dimensions, colors, breakpoints,\n} from '../styles/variables';\nimport Container from './Container';\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  height: 100%;\n  display: flex;\n  background-color: ${colors.brand};\n  position: relative;\n  justify-content: space-between;\n  align-items: center;\n  margin: 0 auto;\n  padding: 0 5vw;\n  z-index: 2;\n  align-self: center;\n\n  @media (max-width: ${breakpoints.md}px) {\n    position: sticky;\n    top: 0;\n    left: 0;\n    right: 0;\n    left: 0;\n  }\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.2rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\nconst Toggle = styled.div`\n  display: none;\n  height: 100%;\n  cursor: pointer;\n  padding: 0 10vw;\n  align-self: flex-end;\n\n  @media (max-width: 768px) {\n    display: flex;\n  }\n`;\n\ninterface NavBoxDiv {\n  open: boolean\n}\n\nconst Navbox = styled.div<NavBoxDiv>`\n  display: flex;\n  height: 100%;\n  justify-content: flex-end;\n  align-items: center;\n  z-index: 10;\n\n  @media (max-width: ${breakpoints.md}px) {\n    flex-direction: column;\n    position: fixed;\n    width: 100%;\n    justify-content: flex-start;\n    padding-top: 10vh;\n    background-color: #fff;\n    transition: all 0.3s ease-in;\n    top: 8vh;\n    left: ${(props) => (props.open ? '-100%' : '0')};\n  }\n`;\n\ninterface HamburgerDiv {\n  open: boolean\n}\n\nconst Hamburger = styled.div<HamburgerDiv>`\n  background-color: ${colors.white};\n  align-self: flex-end;\n  width: 30px;\n  height: 3px;\n  transition: all .3s linear;\n  align-self: center;\n  position: relative;\n  transform: ${(props) => (props.open ? 'rotate(-45deg)' : 'inherit')};\n\n  ::before,\n  ::after {\n    width: 30px;\n    height: 3px;\n    background-color: ${colors.white};\n    content: \"\";\n    position: absolute;\n    transition: all 0.3s linear;\n  }\n\n  ::before {\n    transform: ${(props) => (props.open ? 'rotate(-90deg) translate(-10px, 0px)' : 'rotate(0deg)')};\n    top: -10px;\n  }\n\n  ::after {\n    opacity: ${(props) => (props.open ? '0' : '1')};\n    transform: ${(props) => (props.open ? 'rotate(90deg) ' : 'rotate(0deg)')};\n    top: 10px;\n  }\n`;\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <StyledHeader>\n      <HeaderInner>\n        <HomepageLink to=\"/\">{title}</HomepageLink>\n        <Toggle\n          onClick={() => setNavbarOpen(!navbarOpen)}\n        >\n          {navbarOpen ? <Hamburger open /> : <Hamburger />}\n        </Toggle>\n        {navbarOpen ? (\n          <Navbox>\n            <NavBarLinks />\n          </Navbox>\n        ) : (\n          <Navbox open>\n            <NavBarLinks />\n          </Navbox>\n        )}\n      </HeaderInner>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport normalize from '../styles/normalize';\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n);\n\nexport default LayoutRoot;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport 'modern-normalize';\nimport '../styles/normalize';\n\nimport Header from '../components/Header';\nimport LayoutRoot from '../components/LayoutRoot';\nimport LayoutMain from '../components/LayoutMain';\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords },\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n);\n\nexport default IndexLayout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}