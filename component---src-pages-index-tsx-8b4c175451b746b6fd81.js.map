{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/styles/variables.ts","webpack:///./src/styles/mixins.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Container.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/styles/normalize.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Container","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Window","Terminal","Command","IndexPage","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components_Page__WEBPACK_IMPORTED_MODULE_3__","query","__webpack_require__","d","__webpack_exports__","colors","fonts","breakpoints","widths","dimensions","heights","brand","lilac","accent","success","warning","ui","bright","light","whisper","code","gray","dark","copy","calm","white","black","sansSerif","serif","monospace","xs","sm","md","lg","xl","fontSize","regular","large","headingSizes","h1","h2","h3","h4","lineHeight","heading","containerPadding","header","getEmSize","_variables__WEBPACK_IMPORTED_MODULE_0__","size","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","StyledContainer","className","StyledPage","Page","normalize","StyledHeader","styled_base_browser_esm","transparentize","HeaderInner","HomepageLink","Link","PageLink","Header","title","core_browser_esm","to","StyledLayoutRoot","LayoutRoot","react","css","StyledLayoutMain","LayoutMain","IndexLayout","gatsby_browser_entry","components_LayoutRoot","Helmet_default","site","siteMetadata","meta","content","description","keywords","components_Header","components_LayoutMain","_991718019","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname"],"mappings":"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","file":"component---src-pages-index-tsx-8b4c175451b746b6fd81.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\n\nimport styled from '@emotion/styled';\nimport Page from '../components/Page';\nimport IndexLayout from '../layouts';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\nconst Window = styled.div`\n  border-radius: 3px;\n  background: #222;\n  color: #fff;\n  overflow: hidden;\n  position: relative;\n  margin: 0 auto;\n  width: 70%;\n  \n  &:before {\n    content: ' ';\n    display: block;\n    height: 48px;\n    background: #C6C6C6;\n  }\n  \n  &:after {\n    content: '. . .';\n    position: absolute;\n    left: 12px;\n    right: 0;\n    top: -3px;\n    font-family: \"Times New Roman\", Times, serif;\n    font-size: 96px;\n    color: #fff;\n    line-height: 0;\n    letter-spacing: -12px;\n  }\n`;\n\nconst Terminal = styled.div`\n  margin: 20px;\n  font-family: monospace;\n  font-size: 16px;\n  color: #22da26;\n}`;\n\nconst Command = styled.p`\n  width: 100%;\n  white-space: wrap;\n  overflow: wrap;\n  animation: write-command 5s both;\n  \n  &:before {\n    content: '$ ';\n    color: #22da26;\n  }\n`;\n\n\nconst IndexPage = () => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <Window>\n          <Terminal>\n            <Command>Welcome to 2.0 of my personal site!</Command>\n            <Command>\n              My name is Luke Shadler. I am a Full-Stack Software Engineer\n              based in San Diego, California.\n            </Command>\n            <Command>Let&apos;s go make something cool!</Command>\n          </Terminal>\n        </Window>\n      </Container>\n    </Page>\n  </IndexLayout>\n);\n\nexport default IndexPage;\n\nexport const query = graphql`\n  query {\n    file(relativePath: { eq: \"Luke_portrait_01.jpg\" }) {\n      childImageSharp {\n          # Specify the image processing specifications right in the query.\n          # Makes it trivial to update as your page's design changes.\n          fluid(\n            srcSetBreakpoints: [200, 400, 600, 800, 1200]\n          ) {\n            ...GatsbyImageSharpFluid\n          }\n      }\n    }\n  }\n`;\n","/* eslint-disable max-len */\n\nexport const colors = {\n  brand: '#123632',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc',\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)',\n  },\n  white: '#fff',\n  black: '#000',\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace',\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200,\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140,\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18,\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25,\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2,\n  },\n  containerPadding: 1.5,\n};\n\nexport const heights = {\n  header: 60,\n};\n","import { dimensions } from './variables';\n\nexport const getEmSize = (size: number) => size / dimensions.fontSize.regular;\n\nexport default {\n  getEmSize,\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { widths } from '../styles/variables';\nimport { getEmSize } from '../styles/mixins';\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`;\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.FC<ContainerProps> = ({\n  children,\n  className,\n}) => <StyledContainer className={className}>{children}</StyledContainer>;\n\nexport default Container;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport { dimensions } from '../styles/variables';\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n  padding: ${dimensions.containerPadding}rem;\n  margin-bottom: 3rem;\n`;\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.FC<PageProps> = ({\n  children,\n  className,\n}) => <StyledPage className={className}>{children}</StyledPage>;\n\nexport default Page;\n","import {\n  dimensions, fonts, colors, breakpoints,\n} from './variables';\nimport { getEmSize } from './mixins';\n\nexport default `\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  html {\n    font-size: ${dimensions.fontSize.regular}px !important;\n    line-height: ${dimensions.lineHeight.regular} !important;\n  }\n\n  body {\n    width: 100%;\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-family: ${fonts.sansSerif};\n    color: ${colors.black};\n    background-color: ${colors.ui.whisper};\n    -webkit-text-size-adjust: 100%;\n    -ms-text-size-adjust: 100%;\n  }\n\n  a {\n    color: ${colors.brand};\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  img {\n    max-width: 100%;\n    object-fit: contain;\n    position: relative;\n  }\n\n  figure {\n    margin: 2rem 0;\n  }\n\n  figcaption {\n    font-size: 80%;\n  }\n\n  table {\n    width: 100%;\n    margin-bottom: 1rem;\n    border: 1px solid ${colors.ui.light};\n    font-size: 85%;\n    border-collapse: collapse;\n  }\n\n  td,\n  th {\n    padding: .25rem .5rem;\n    border: 1px solid ${colors.ui.light};\n  }\n\n  th {\n    text-align: left;\n  }\n\n  tbody {\n    tr {\n      &:nth-of-type(odd) {\n        td {\n          background-color: ${colors.ui.whisper};\n        }\n        tr {\n          background-color: ${colors.ui.whisper};\n        }\n      }\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    margin-top: 1.414rem;\n    margin-bottom: .5rem;\n    color: ${colors.black};\n    font-weight: 600;\n    line-height: ${dimensions.lineHeight.heading};\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin-top: 0;\n    font-size: ${dimensions.headingSizes.h1}rem;\n  }\n\n  h2 {\n    font-size: ${dimensions.headingSizes.h2}rem;\n  }\n\n  h3 {\n    font-size: ${dimensions.headingSizes.h3}rem;\n  }\n\n  h4, h5, h6 {\n    font-size: ${dimensions.headingSizes.h4}rem;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  strong {\n    color: ${colors.black};\n  }\n\n  ul,\n  ol,\n  dl {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin-bottom: .5rem;\n  }\n\n  hr {\n    position: relative;\n    margin: 1.5rem 0;\n    border: 0;\n    border-top: 1px solid ${colors.ui.light};\n  }\n\n  blockquote {\n    margin: .8rem 0;\n    padding: .5rem 1rem;\n    border-left: .25rem solid ${colors.ui.light};\n    color: ${colors.gray.calm};\n\n    p {\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n\n    @media (min-width: ${getEmSize(breakpoints.md)}em) {\n      padding-right: 5rem;\n      padding-left: 1.25rem;\n    }\n  }\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { transparentize } from 'polished';\nimport { Link } from 'gatsby';\n\nimport { heights, dimensions, colors } from '../styles/variables';\nimport Container from './Container';\n\nconst StyledHeader = styled.header`\n  height: ${heights.header}px;\n  padding: 0 ${dimensions.containerPadding}rem;\n  background-color: ${colors.brand};\n  color: ${transparentize(0.5, colors.white)};\n`;\n\nconst HeaderInner = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 100%;\n`;\n\nconst HomepageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.5rem;\n  font-weight: 600;\n\n  &:hover,\n  &:focus {\n    text-decoration: none;\n  }\n`;\n\nconst PageLink = styled(Link)`\n  color: ${colors.white};\n  font-size: 1.1rem;\n  margin-left: 1.0rem;\n  font-weight: 400;\n\n`;\n\ninterface HeaderProps {\n  title: string\n}\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n  <StyledHeader>\n    <HeaderInner>\n      <HomepageLink to=\"/\">{title}</HomepageLink>\n      <PageLink to=\"/resume\">Resume</PageLink>\n      <PageLink to=\"/blog\">Blog</PageLink>\n      <PageLink to=\"/band\">Band</PageLink>\n    </HeaderInner>\n  </StyledHeader>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport { Global, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport normalize from '../styles/normalize';\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.FC<LayoutRootProps> = ({ children, className }) => (\n  <>\n    <Global styles={() => css(normalize)} />\n    <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n  </>\n);\n\nexport default LayoutRoot;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nconst StyledLayoutMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\ninterface LayoutMainProps {\n  className?: string\n}\n\nconst LayoutMain: React.FC<LayoutMainProps> = ({ children, className }) => (\n  <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\n);\n\nexport default LayoutMain;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport 'modern-normalize';\nimport '../styles/normalize';\n\nimport Header from '../components/Header';\nimport LayoutRoot from '../components/LayoutRoot';\nimport LayoutMain from '../components/LayoutMain';\n\ninterface StaticQueryProps {\n  site: {\n    siteMetadata: {\n      title: string\n      description: string\n      keywords: string\n    }\n  }\n}\n\nconst IndexLayout: React.FC = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n    render={(data: StaticQueryProps) => (\n      <LayoutRoot>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: data.site.siteMetadata.keywords },\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <LayoutMain>{children}</LayoutMain>\n      </LayoutRoot>\n    )}\n  />\n);\n\nexport default IndexLayout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}